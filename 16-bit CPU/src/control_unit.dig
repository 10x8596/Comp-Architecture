<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>backgroundColor</string>
      <awt-color>
        <red>153</red>
        <green>153</green>
        <blue>255</blue>
        <alpha>255</alpha>
      </awt-color>
    </entry>
    <entry>
      <string>romContent</string>
      <romList>
        <roms/>
      </romList>
    </entry>
    <entry>
      <string>Width</string>
      <int>6</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>INST</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>hex</intFormat>
        </entry>
      </elementAttributes>
      <pos x="-580" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="-520" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="-480" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="-560" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="-20" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>mirror</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>11-11,10-8,6-4,2-0,15-12,3-3,7-7</string>
        </entry>
      </elementAttributes>
      <pos x="-580" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>opcode</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-500" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>cond</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-580" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rd</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-560" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Ra</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-540" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rb</string>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-520" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>All Tests</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                WE  ALUOP  RS1   RS2  WS  STR  LDR DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0)  1  (i)     (ra)  (rb) (rd)  0   X    0  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )         1  X       (ra)  x    (rd)  0   1    1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )         0  X       (ra)  (rd)  X    1   X    X  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )           1  X       X      X   (rd)  0   X    2  #test movl

	let imm = random(256);
	(sethop   &lt;&lt;12 | rd&lt;&lt;8 | imm )           1  X       X      X   (rd)  0   X    3  #test seth

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-960" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    ALUOP 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (i)    #test add/sub/and/xor
end loop

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-1020" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS1  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (ra)  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-900" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS2  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rb) #test add/sub/and/xor
end loop
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd) #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-1020" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    STR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          0  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-1020" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WE  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-900" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    LDR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) X    #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X    #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          X    #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-900" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;
let sethop = 0b0001;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          2  #test movl

	let imm = random(256);
	(sethop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          3  #test seth

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-900" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WS 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rd)  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd)   #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X     #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          (rd)  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-1020" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-460" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>3</string>
        </entry>
      </elementAttributes>
      <pos x="-480" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>7</string>
        </entry>
      </elementAttributes>
      <pos x="-460" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>INST</string>
        </entry>
      </elementAttributes>
      <pos x="-20" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>FLAG</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="-660" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>EXEC</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>FLAG INST EXEC
0000 0b0000000000000000 1
0000 0b0000100000000000 0
0001 0b0000100000000000 1
0001 0b0000000000000000 1

1010 0b0000000000000000 1
0100 0b0000100000011111 0
1101 0b0000100000000000 1
0011 0b0100000111100010 1

1110 0b0110000000011100 1
1110 0b0000100000000000 0
1111 0b0000100000000000 1
1111 0b0000000000000000 1</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-1020" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>DMUX.dig</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
      </elementAttributes>
      <pos x="-20" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>INST                FLEN
0b1000000000000000   1
0b1001000000000000   1
0b1010000000000000   1
0b1011000000000000   1
X                    0</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="-900" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>rd</string>
        </entry>
      </elementAttributes>
      <pos x="-580" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Decoder</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>3</int>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-360" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>PC_write</string>
        </entry>
      </elementAttributes>
      <pos x="20" y="340"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>4</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1-3</string>
        </entry>
      </elementAttributes>
      <pos x="-660" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>0-3</string>
        </entry>
      </elementAttributes>
      <pos x="-660" y="60"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="-80" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="-100" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>INST</string>
        </entry>
      </elementAttributes>
      <pos x="-540" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="-680" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="-220" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
      </elementAttributes>
      <pos x="-180" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
      </elementAttributes>
      <pos x="-100" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
      </elementAttributes>
      <pos x="-140" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
      </elementAttributes>
      <pos x="-60" y="20"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="-440" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>main_decoder_basic.dig</elementName>
      <elementAttributes/>
      <pos x="-400" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Label</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="-640" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>condition_check.dig</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
      </elementAttributes>
      <pos x="-620" y="200"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="-100" y="320"/>
      <p2 x="-80" y="320"/>
    </wire>
    <wire>
      <p1 x="-260" y="260"/>
      <p2 x="-100" y="260"/>
    </wire>
    <wire>
      <p1 x="-580" y="40"/>
      <p2 x="-540" y="40"/>
    </wire>
    <wire>
      <p1 x="-500" y="200"/>
      <p2 x="-400" y="200"/>
    </wire>
    <wire>
      <p1 x="-260" y="200"/>
      <p2 x="-220" y="200"/>
    </wire>
    <wire>
      <p1 x="-240" y="360"/>
      <p2 x="-80" y="360"/>
    </wire>
    <wire>
      <p1 x="-680" y="460"/>
      <p2 x="-640" y="460"/>
    </wire>
    <wire>
      <p1 x="-540" y="460"/>
      <p2 x="-520" y="460"/>
    </wire>
    <wire>
      <p1 x="-580" y="460"/>
      <p2 x="-560" y="460"/>
    </wire>
    <wire>
      <p1 x="-560" y="400"/>
      <p2 x="-500" y="400"/>
    </wire>
    <wire>
      <p1 x="-500" y="400"/>
      <p2 x="-360" y="400"/>
    </wire>
    <wire>
      <p1 x="-260" y="240"/>
      <p2 x="-140" y="240"/>
    </wire>
    <wire>
      <p1 x="0" y="340"/>
      <p2 x="20" y="340"/>
    </wire>
    <wire>
      <p1 x="-260" y="280"/>
      <p2 x="-60" y="280"/>
    </wire>
    <wire>
      <p1 x="-620" y="120"/>
      <p2 x="-580" y="120"/>
    </wire>
    <wire>
      <p1 x="-460" y="440"/>
      <p2 x="-180" y="440"/>
    </wire>
    <wire>
      <p1 x="-520" y="380"/>
      <p2 x="-460" y="380"/>
    </wire>
    <wire>
      <p1 x="-260" y="220"/>
      <p2 x="-180" y="220"/>
    </wire>
    <wire>
      <p1 x="-440" y="220"/>
      <p2 x="-400" y="220"/>
    </wire>
    <wire>
      <p1 x="-100" y="20"/>
      <p2 x="-100" y="260"/>
    </wire>
    <wire>
      <p1 x="-580" y="20"/>
      <p2 x="-580" y="40"/>
    </wire>
    <wire>
      <p1 x="-580" y="40"/>
      <p2 x="-580" y="100"/>
    </wire>
    <wire>
      <p1 x="-520" y="460"/>
      <p2 x="-520" y="480"/>
    </wire>
    <wire>
      <p1 x="-520" y="120"/>
      <p2 x="-520" y="380"/>
    </wire>
    <wire>
      <p1 x="-140" y="20"/>
      <p2 x="-140" y="240"/>
    </wire>
    <wire>
      <p1 x="-460" y="380"/>
      <p2 x="-460" y="420"/>
    </wire>
    <wire>
      <p1 x="-460" y="120"/>
      <p2 x="-460" y="140"/>
    </wire>
    <wire>
      <p1 x="-620" y="120"/>
      <p2 x="-620" y="200"/>
    </wire>
    <wire>
      <p1 x="-560" y="120"/>
      <p2 x="-560" y="400"/>
    </wire>
    <wire>
      <p1 x="-560" y="460"/>
      <p2 x="-560" y="480"/>
    </wire>
    <wire>
      <p1 x="-560" y="400"/>
      <p2 x="-560" y="460"/>
    </wire>
    <wire>
      <p1 x="-240" y="360"/>
      <p2 x="-240" y="380"/>
    </wire>
    <wire>
      <p1 x="-660" y="80"/>
      <p2 x="-660" y="100"/>
    </wire>
    <wire>
      <p1 x="-660" y="20"/>
      <p2 x="-660" y="60"/>
    </wire>
    <wire>
      <p1 x="-660" y="120"/>
      <p2 x="-660" y="200"/>
    </wire>
    <wire>
      <p1 x="-20" y="20"/>
      <p2 x="-20" y="100"/>
    </wire>
    <wire>
      <p1 x="-20" y="220"/>
      <p2 x="-20" y="240"/>
    </wire>
    <wire>
      <p1 x="-500" y="400"/>
      <p2 x="-500" y="420"/>
    </wire>
    <wire>
      <p1 x="-500" y="120"/>
      <p2 x="-500" y="200"/>
    </wire>
    <wire>
      <p1 x="-180" y="20"/>
      <p2 x="-180" y="220"/>
    </wire>
    <wire>
      <p1 x="-180" y="220"/>
      <p2 x="-180" y="440"/>
    </wire>
    <wire>
      <p1 x="-540" y="120"/>
      <p2 x="-540" y="460"/>
    </wire>
    <wire>
      <p1 x="-540" y="0"/>
      <p2 x="-540" y="40"/>
    </wire>
    <wire>
      <p1 x="-220" y="20"/>
      <p2 x="-220" y="200"/>
    </wire>
    <wire>
      <p1 x="-60" y="20"/>
      <p2 x="-60" y="280"/>
    </wire>
    <wire>
      <p1 x="-640" y="300"/>
      <p2 x="-640" y="460"/>
    </wire>
    <wire>
      <p1 x="-640" y="460"/>
      <p2 x="-640" y="480"/>
    </wire>
    <wire>
      <p1 x="-480" y="460"/>
      <p2 x="-480" y="480"/>
    </wire>
    <wire>
      <p1 x="-480" y="120"/>
      <p2 x="-480" y="140"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>